version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=hospital_user
      - DB_PASSWORD=hospital_pass
      - DB_NAME=hospital_db
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - SERVER_PORT=8080
      - GIN_MODE=release
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./web:/app/web
    restart: unless-stopped
    networks:
      - hospital-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=hospital_user
      - POSTGRES_PASSWORD=hospital_pass
      - POSTGRES_DB=hospital_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./internal/database/migrations:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hospital_user -d hospital_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - hospital-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - hospital-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - hospital-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  hospital-network:
    driver: bridge